services:
  reverse-proxy:
    image: nginx:alpine
    depends_on:
      homepage:
        condition: service_started
      wiki:
        condition: service_started
      webapp:
        condition: service_started
      backend:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - proxy
    restart: unless-stopped

  homepage:
    build:
      context: ./homepage
    image: tracker/homepage:latest
    expose:
      - "80"
    networks:
      - proxy
    restart: unless-stopped

  wiki:
    build:
      context: ./homepage
      dockerfile: wiki/Dockerfile
    image: tracker/wiki:latest
    expose:
      - "80"
    networks:
      - proxy
    restart: unless-stopped

  webapp:
    build:
      context: ./app
      dockerfile: Dockerfile.web
      args:
        BACKEND_URL: https://api.personal-tracker.life
    image: tracker/webapp:latest
    expose:
      - "80"
    networks:
      - proxy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: tracker
      POSTGRES_USER: tracker
      POSTGRES_PASSWORD: tracker
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal
    restart: unless-stopped

  backend:
    build:
      context: ./backend_dart
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://tracker:tracker@db:5432/tracker
      AUTH_SECRET_KEY: change-this-secret
      CORS_ALLOW_ORIGINS: "*"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    networks:
      - proxy
      - internal
    restart: unless-stopped

networks:
  proxy:
  internal:
    internal: true
